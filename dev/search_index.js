var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SyntheticLikelihood","category":"page"},{"location":"#SyntheticLikelihood","page":"Home","title":"SyntheticLikelihood","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SyntheticLikelihood package. Simulator functions should have a single positional argument of parameters (and can have arbitrary key word arguments). Summary functions should take the output from the simulator directly as a single positional argument (and can have arbitrary key word arguments).","category":"page"},{"location":"#Function-list","page":"Home","title":"Function list","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Function-descriptions","page":"Home","title":"Function descriptions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [SyntheticLikelihood]","category":"page"},{"location":"#SyntheticLikelihood.Localμ","page":"Home","title":"SyntheticLikelihood.Localμ","text":"Struct that contains the information from the first local regression.\n\n\n\n\n\n","category":"type"},{"location":"#SyntheticLikelihood.get_local_μ-Tuple{}","page":"Home","title":"SyntheticLikelihood.get_local_μ","text":"Gets the local behaviour of μ. Returns Localμ struct, containing the first and second derivitive estimates as well as the regression residuals.\n\nget_local_μ(; θ_orig, θ, s)\n\n\nArguments\n\nθ_orig::AbstractVector Original θ.\nθ::AbstractMatrix Peturbed θ (sampled from local area).\ns::AbstractMatrix Corresponding summary statistics to θ.\n\n\n\n\n\n","category":"method"},{"location":"#SyntheticLikelihood.linear_regression-Tuple{AbstractArray{T,2} where T,AbstractArray{T,1} where T}","page":"Home","title":"SyntheticLikelihood.linear_regression","text":"Carry out linear regression. X should have a bias column. Returns tuple (β, ŷ).\n\nlinear_regression(X, s)\n\n\n\n\n\n\n","category":"method"},{"location":"#SyntheticLikelihood.pairwise_combinations-Tuple{Int64}","page":"Home","title":"SyntheticLikelihood.pairwise_combinations","text":"Pairwise combinations (for quadratic regression). n=5 would return all the pairwise combinations between 1:5 (including matched terms e.g. [1,1]).\n\npairwise_combinations(n)\n\n\n\n\n\n\n","category":"method"},{"location":"#SyntheticLikelihood.peturb","page":"Home","title":"SyntheticLikelihood.peturb","text":"Peturb a vector using a user specified distribution (often MVN zero mean). Returns array of size (n, length(θ))\n\npeturb(θ, d)\npeturb(θ, d, n)\n\n\nArguments\n\nθ::AbstractVector Parameter to peturb.\nd::Sampleable Distribution from which to sample (see Distributions.jl).\nn::Int = 1 Number of peturbed vectors to return.\n\n\n\n\n\n","category":"function"},{"location":"#SyntheticLikelihood.quadratic_transform-Tuple{AbstractArray{T,2} where T}","page":"Home","title":"SyntheticLikelihood.quadratic_transform","text":"Quadratic transform. Bias term appended as first column internally. Returns a tuple, with the matrix and the corresponding indices multiplied, that give rise to each column. Note, indices [1, 1] corresponds to the bias term (so indices compared to original matrix is shifted). A bit naive so could be sped up but neat.\n\nquadratic_transform(X)\n\n\n\n\n\n\n","category":"method"},{"location":"#SyntheticLikelihood.simulate_n_s-Tuple{AbstractArray{T,1} where T}","page":"Home","title":"SyntheticLikelihood.simulate_n_s","text":"Simulates summary statistics from the model under a fixed parameter vector, or a matrix of parameter vectors. If a vector is used, n_sim is specified as the number of simulations. If a matrix is used, one simulation is carried out using each row as a parameter vector. By defualt simulations are run on multiple threads (see Threads manual for information on starting Julia with multiple threads).\n\nsimulate_n_s(θ; simulator, summary, n_sim, simulator_kwargs, summary_kwargs, parallel)\n\n\nArguments\n\nθ::AbstractVector Parameter vector passed to simulator.\nsimulator::Function Simulator.\nsummary::Function Summary function that takes output of simulator.\nn_sim::Int Number of simulations.\nsimulator_kwargs Kwargs passed to simulator.\nsummary_kwargs Kwargs passed to summary.\nparallel::Bool = true Whether to run on multiple threads.\n\n\n\n\n\n","category":"method"},{"location":"#SyntheticLikelihood.simulate_n_s-Tuple{AbstractArray{T,2} where T}","page":"Home","title":"SyntheticLikelihood.simulate_n_s","text":"As for above, but uses an Array of parameter values are used, carrying out one     simulation from each row of θ.\n\nsimulate_n_s(θ; simulator, summary, simulator_kwargs, summary_kwargs, parallel)\n\n\n\n\n\n\n","category":"method"},{"location":"#SyntheticLikelihood.synthetic_likelihood-Tuple{AbstractArray{T,1} where T}","page":"Home","title":"SyntheticLikelihood.synthetic_likelihood","text":"Evaluates synthetic likelhood of observed data for a fixed parameter vector     using a multivariate Gaussian assumption as in (Simon Wood, 2010).\n\nsynthetic_likelihood(θ; simulator, summary, s_true, n_sim, simulator_kwargs, summary_kwargs)\n\n\nArguments\n\nθ::AbstractVector Parameter vector passed to simulator.\nsimulator::Function Simulator.\nsummary::Function Summary function that takes output of simulator.\ns_true::AbstractVector Observed summary statistics.\nn_sim::Int Number of simulations to use.\nsimulator_kwargs Kwargs splatted in simulator.\nsummary_kwargs Kwargs splatted in summary.\n\n\n\n\n\n","category":"method"}]
}
